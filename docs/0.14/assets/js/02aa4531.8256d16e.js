"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5667],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(t),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return t?r.createElement(f,o(o({ref:n},u),{},{components:t})):r.createElement(f,o({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[d]="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2327:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=t(7462),a=(t(7294),t(3905));const i={},o="Conversion",c={unversionedId:"ast-builder/functions/math/conversion",id:"ast-builder/functions/math/conversion",title:"Conversion",description:"The AST (Abstract Syntax Tree) Builder in GlueSQL provides mathematical conversion functions like degrees and radians. These functions convert angles expressed in radians to degrees and vice versa.",source:"@site/docs/ast-builder/functions/math/conversion.md",sourceDirName:"ast-builder/functions/math",slug:"/ast-builder/functions/math/conversion",permalink:"/docs/dev/ast-builder/functions/math/conversion",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"autoSidebar",previous:{title:"Basic Arithmetic",permalink:"/docs/dev/ast-builder/functions/math/basic-arithmetic"},next:{title:"Logarithmic and Exponential",permalink:"/docs/dev/ast-builder/functions/math/logarithmic-and-exponential"}},s={},l=[{value:"Degrees Function",id:"degrees-function",level:2},{value:"Radians Function",id:"radians-function",level:2}],u={toc:l},d="wrapper";function p(e){let{components:n,...t}=e;return(0,a.kt)(d,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"conversion"},"Conversion"),(0,a.kt)("p",null,"The AST (Abstract Syntax Tree) Builder in GlueSQL provides mathematical conversion functions like ",(0,a.kt)("inlineCode",{parentName:"p"},"degrees")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"radians"),". These functions convert angles expressed in radians to degrees and vice versa."),(0,a.kt)("p",null,"For the sake of this tutorial, we'll assume there's a table named ",(0,a.kt)("inlineCode",{parentName:"p"},"Number")," with columns ",(0,a.kt)("inlineCode",{parentName:"p"},"input")," (of type ",(0,a.kt)("inlineCode",{parentName:"p"},"INTEGER"),") and ",(0,a.kt)("inlineCode",{parentName:"p"},"number")," (of type ",(0,a.kt)("inlineCode",{parentName:"p"},"FLOAT"),")."),(0,a.kt)("h2",{id:"degrees-function"},"Degrees Function"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"degrees")," function converts an angle from radians to degrees."),(0,a.kt)("p",null,"You can call this function in two ways in GlueSQL:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'let actual = table("Number")\n    .select()\n    .project("input")\n    .project(degrees("number"))  // Method 1: Using the degrees function directly\n    .project(col("number").degrees())  // Method 2: Calling the degrees method on a column\n    .execute(glue)\n    .await;\n')),(0,a.kt)("h2",{id:"radians-function"},"Radians Function"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"radians")," function converts an angle from degrees to radians."),(0,a.kt)("p",null,"Just like with the ",(0,a.kt)("inlineCode",{parentName:"p"},"degrees")," function, there are two ways to call this function:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'let actual = table("Number")\n    .select()\n    .project("input")\n    .project(radians("number"))  // Method 1: Using the radians function directly\n    .project(col("number").radians())  // Method 2: Calling the radians method on a column\n    .execute(glue)\n    .await;\n')))}p.isMDXComponent=!0}}]);