"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8697],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(n),d=a,f=c["".concat(s,".").concat(d)]||c[d]||m[d]||i;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4524:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const i={},l="SUBSTR",o={unversionedId:"sql-syntax/functions/text/substr",id:"sql-syntax/functions/text/substr",title:"SUBSTR",description:"The SUBSTR function in SQL is used to extract a substring from a string.",source:"@site/docs/sql-syntax/functions/text/substr.md",sourceDirName:"sql-syntax/functions/text",slug:"/sql-syntax/functions/text/substr",permalink:"/docs/0.14/sql-syntax/functions/text/substr",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"autoSidebar",previous:{title:"RTRIM",permalink:"/docs/0.14/sql-syntax/functions/text/rtrim"},next:{title:"TRIM",permalink:"/docs/0.14/sql-syntax/functions/text/trim"}},s={},u=[{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Errors",id:"errors",level:2},{value:"Examples",id:"examples",level:2}],p={toc:u},c="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"substr"},"SUBSTR"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"SUBSTR")," function in SQL is used to extract a substring from a string."),(0,a.kt)("h2",{id:"syntax"},"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SUBSTR(string, start_position, length)\n")),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"string"),": The original string."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"start_position"),": The position in the string where the extraction of the substring will begin. The position of the first character is 1. If ",(0,a.kt)("inlineCode",{parentName:"li"},"start_position")," is 0 or negative, the function treats it as 1."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"length")," (optional): The number of characters to extract. If ",(0,a.kt)("inlineCode",{parentName:"li"},"length")," is not included, the function will return all characters starting from ",(0,a.kt)("inlineCode",{parentName:"li"},"start_position"),".")),(0,a.kt)("h2",{id:"return-value"},"Return Value"),(0,a.kt)("p",null,"The function returns a string which is a substring of the original string. The substring starts at ",(0,a.kt)("inlineCode",{parentName:"p"},"start_position")," and has ",(0,a.kt)("inlineCode",{parentName:"p"},"length")," number of characters."),(0,a.kt)("h2",{id:"errors"},"Errors"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If the ",(0,a.kt)("inlineCode",{parentName:"li"},"string")," parameter is not a string value, a ",(0,a.kt)("inlineCode",{parentName:"li"},"EvaluateError::FunctionRequiresStringValue")," error will be returned."),(0,a.kt)("li",{parentName:"ul"},"If the ",(0,a.kt)("inlineCode",{parentName:"li"},"start_position")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"length")," parameters are not integer values, a ",(0,a.kt)("inlineCode",{parentName:"li"},"EvaluateError::FunctionRequiresIntegerValue")," error will be returned."),(0,a.kt)("li",{parentName:"ul"},"If the ",(0,a.kt)("inlineCode",{parentName:"li"},"length")," parameter is negative, a ",(0,a.kt)("inlineCode",{parentName:"li"},"EvaluateError::NegativeSubstrLenNotAllowed")," error will be returned.")),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("p",null,"Consider a table ",(0,a.kt)("inlineCode",{parentName:"p"},"Item")," created and filled with the following data:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE Item (name TEXT);\nINSERT INTO Item VALUES ('Blop mc blee'), ('B'), ('Steven the &long named$ folken!');\n")),(0,a.kt)("p",null,"You can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"SUBSTR")," function to get a substring from the ",(0,a.kt)("inlineCode",{parentName:"p"},"name")," values:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT SUBSTR(name, 2) AS test FROM Item;\n")),(0,a.kt)("p",null,"This will return:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"lop mc blee\n(empty string)\nteven the &long named$ folken!\n")),(0,a.kt)("p",null,"The function takes the substring starting from the second character until the end for each ",(0,a.kt)("inlineCode",{parentName:"p"},"name")," value."))}m.isMDXComponent=!0}}]);