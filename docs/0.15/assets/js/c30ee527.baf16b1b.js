"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9661],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,y=u["".concat(i,".").concat(d)]||u[d]||m[d]||o;return n?a.createElement(y,s(s({ref:t},c),{},{components:n})):a.createElement(y,s({ref:t},c))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[u]="string"==typeof e?e:r,s[1]=l;for(var p=2;p<o;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3140:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:1},s="SHOW TABLES",l={unversionedId:"sql-syntax/statements/metadata/show-tables",id:"sql-syntax/statements/metadata/show-tables",title:"SHOW TABLES",description:"The SHOW TABLES statement in GlueSQL is used to display a list of tables available in the database. This statement is useful when you want to inspect the current structure of your database or when you want to manage multiple tables.",source:"@site/docs/sql-syntax/statements/metadata/show-tables.md",sourceDirName:"sql-syntax/statements/metadata",slug:"/sql-syntax/statements/metadata/show-tables",permalink:"/docs/0.15/sql-syntax/statements/metadata/show-tables",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"autoSidebar",previous:{title:"Transaction",permalink:"/docs/0.15/sql-syntax/statements/transaction"},next:{title:"Data Dictionary",permalink:"/docs/0.15/sql-syntax/statements/metadata/data-dictionary"}},i={},p=[{value:"Syntax",id:"syntax",level:2},{value:"Example",id:"example",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"show-tables"},"SHOW TABLES"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"SHOW TABLES")," statement in GlueSQL is used to display a list of tables available in the database. This statement is useful when you want to inspect the current structure of your database or when you want to manage multiple tables."),(0,r.kt)("h2",{id:"syntax"},"Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SHOW TABLES;\n")),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"Consider the following example where we create a few tables and then use the ",(0,r.kt)("inlineCode",{parentName:"p"},"SHOW TABLES")," statement to list them:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE Foo (id INTEGER, name TEXT NULL, type TEXT NULL);\nCREATE TABLE Zoo (id INTEGER);\nCREATE TABLE Bar (id INTEGER, name TEXT NULL);\n\nSHOW TABLES;\n")),(0,r.kt)("p",null,"The output of the ",(0,r.kt)("inlineCode",{parentName:"p"},"SHOW TABLES")," statement will be:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Bar\nFoo\nZoo\n")),(0,r.kt)("p",null,"The tables are listed in alphabetical order."))}m.isMDXComponent=!0}}]);