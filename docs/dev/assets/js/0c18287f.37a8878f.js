"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3475],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=a.createContext({}),s=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=s(n),d=l,f=u["".concat(i,".").concat(d)]||u[d]||m[d]||r;return n?a.createElement(f,p(p({ref:t},c),{},{components:n})):a.createElement(f,p({ref:t},c))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,p=new Array(r);p[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[u]="string"==typeof e?e:l,p[1]=o;for(var s=2;s<r;s++)p[s]=n[s];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},194:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>p,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var a=n(7462),l=(n(7294),n(3905));const r={},p="APPEND",o={unversionedId:"sql-syntax/functions/list-map/append",id:"sql-syntax/functions/list-map/append",title:"APPEND",description:"The APPEND function in SQL is used to append an element to a list.",source:"@site/docs/sql-syntax/functions/list-map/append.md",sourceDirName:"sql-syntax/functions/list-map",slug:"/sql-syntax/functions/list-map/append",permalink:"/docs/dev/sql-syntax/functions/list-map/append",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sqlSyntaxSidebar",previous:{title:"TO_TIMESTAMP",permalink:"/docs/dev/sql-syntax/functions/datetime/to-timestamp"},next:{title:"CONCAT",permalink:"/docs/dev/sql-syntax/functions/list-map/concat"}},i={},s=[{value:"Syntax",id:"syntax",level:2},{value:"Examples",id:"examples",level:2}],c={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,l.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"append"},"APPEND"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"APPEND")," function in SQL is used to append an element to a list."),(0,l.kt)("h2",{id:"syntax"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"APPEND(list, element)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"list"),": The list to which you want to append the element."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"element"),": The element that you want to append to the list.")),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("p",null,"First, create a table named ",(0,l.kt)("inlineCode",{parentName:"p"},"Append")," with columns for the list, an integer element, and a text element:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE Append (\n    id INTEGER,\n    items LIST,\n    element INTEGER,\n    element2 TEXT\n);\n")),(0,l.kt)("p",null,"Insert some data into the ",(0,l.kt)("inlineCode",{parentName:"p"},"Append")," table:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO Append VALUES\n(1, '[1, 2, 3]', 4, 'Foo');\n")),(0,l.kt)("p",null,"Use the ",(0,l.kt)("inlineCode",{parentName:"p"},"APPEND")," function to append the integer element to the list:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT APPEND(items, element) AS myappend FROM Append;\n")),(0,l.kt)("p",null,"Use the ",(0,l.kt)("inlineCode",{parentName:"p"},"APPEND")," function to append the text element to the list:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT APPEND(items, element2) AS myappend FROM Append;\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"APPEND")," function requires a list as the first parameter. If you try to use it with a non-list value, an error will occur:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT APPEND(element, element2) AS myappend FROM Append;\n")),(0,l.kt)("p",null,"You can also use the ",(0,l.kt)("inlineCode",{parentName:"p"},"APPEND")," function when inserting data into a table. First, create a table named ",(0,l.kt)("inlineCode",{parentName:"p"},"Foo")," with a column for the list:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE Foo (\n    elements LIST\n);\n")),(0,l.kt)("p",null,"Then, insert data into the ",(0,l.kt)("inlineCode",{parentName:"p"},"Foo")," table using the ",(0,l.kt)("inlineCode",{parentName:"p"},"APPEND")," function:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO Foo VALUES (APPEND(CAST('[1, 2, 3]' AS LIST), 4));\n")),(0,l.kt)("p",null,"Finally, retrieve the list from the ",(0,l.kt)("inlineCode",{parentName:"p"},"Foo")," table:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT elements AS myappend FROM Foo;\n")))}m.isMDXComponent=!0}}]);