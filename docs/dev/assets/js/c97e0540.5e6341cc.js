"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7332],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),o=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=o(e.components);return r.createElement(u.Provider,{value:n},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=o(t),g=a,d=m["".concat(u,".").concat(g)]||m[g]||c[g]||l;return t?r.createElement(d,s(s({ref:n},p),{},{components:t})):r.createElement(d,s({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,s=new Array(l);s[0]=g;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i[m]="string"==typeof e?e:a,s[1]=i;for(var o=2;o<l;o++)s[o]=t[o];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},1745:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>o});var r=t(7462),a=(t(7294),t(3905));const l={},s="DEGREES",i={unversionedId:"sql-syntax/functions/math/degrees",id:"sql-syntax/functions/math/degrees",title:"DEGREES",description:"The DEGREES function is used to convert a given angle value from radians to degrees. It takes a single numeric argument (angle in radians) and returns the angle in degrees.",source:"@site/docs/sql-syntax/functions/math/degrees.md",sourceDirName:"sql-syntax/functions/math",slug:"/sql-syntax/functions/math/degrees",permalink:"/docs/dev/sql-syntax/functions/math/degrees",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sqlSyntaxSidebar",previous:{title:"COS",permalink:"/docs/dev/sql-syntax/functions/math/cos"},next:{title:"DIV",permalink:"/docs/dev/sql-syntax/functions/math/div"}},u={},o=[{value:"Syntax",id:"syntax",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1: Using DEGREES with float values",id:"example-1-using-degrees-with-float-values",level:3},{value:"Example 2: Using DEGREES with integer values",id:"example-2-using-degrees-with-integer-values",level:3},{value:"Example 3: Using DEGREES with zero",id:"example-3-using-degrees-with-zero",level:3},{value:"Errors",id:"errors",level:2},{value:"Example 4: Using DEGREES with non-numeric values",id:"example-4-using-degrees-with-non-numeric-values",level:3},{value:"Example 5: Using DEGREES with multiple arguments",id:"example-5-using-degrees-with-multiple-arguments",level:3}],p={toc:o},m="wrapper";function c(e){let{components:n,...t}=e;return(0,a.kt)(m,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"degrees"},"DEGREES"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"DEGREES")," function is used to convert a given angle value from radians to degrees. It takes a single numeric argument (angle in radians) and returns the angle in degrees."),(0,a.kt)("h2",{id:"syntax"},"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"DEGREES(value)\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"value"),": A numeric expression (angle in radians) to be converted to degrees.")),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("p",null,"Let's consider a table named ",(0,a.kt)("inlineCode",{parentName:"p"},"SingleItem")," with the following schema:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE SingleItem (id FLOAT);\n")),(0,a.kt)("p",null,"Insert a row into the ",(0,a.kt)("inlineCode",{parentName:"p"},"SingleItem")," table:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO SingleItem VALUES (0);\n")),(0,a.kt)("h3",{id:"example-1-using-degrees-with-float-values"},"Example 1: Using DEGREES with float values"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\nDEGREES(180.0) as degrees_1,\nDEGREES(360.0) as degrees_2\nFROM SingleItem;\n")),(0,a.kt)("p",null,"Result:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"   degrees_1 | degrees_2\n-------------+-------------\n10313.240312 | 20626.480624\n")),(0,a.kt)("h3",{id:"example-2-using-degrees-with-integer-values"},"Example 2: Using DEGREES with integer values"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT DEGREES(90) as degrees_with_int FROM SingleItem;\n")),(0,a.kt)("p",null,"Result:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"degrees_with_int\n-----------------\n     5156.620156\n")),(0,a.kt)("h3",{id:"example-3-using-degrees-with-zero"},"Example 3: Using DEGREES with zero"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT DEGREES(0) as degrees_with_zero FROM SingleItem;\n")),(0,a.kt)("p",null,"Result:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"degrees_with_zero\n------------------\n         0.0\n")),(0,a.kt)("h2",{id:"errors"},"Errors"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"DEGREES")," function requires a numeric value as its argument. Using non-numeric values or more than one argument will result in an error."),(0,a.kt)("h3",{id:"example-4-using-degrees-with-non-numeric-values"},"Example 4: Using DEGREES with non-numeric values"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT DEGREES('string') AS degrees FROM SingleItem;\n")),(0,a.kt)("p",null,"Error: Function requires a numeric value."),(0,a.kt)("h3",{id:"example-5-using-degrees-with-multiple-arguments"},"Example 5: Using DEGREES with multiple arguments"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT DEGREES(0, 0) as degrees_arg2 FROM SingleItem;\n")),(0,a.kt)("p",null,"Error: Function expects 1 argument, but 2 were provided."))}c.isMDXComponent=!0}}]);