"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6738],{5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>g});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(n),y=r,g=p["".concat(l,".").concat(y)]||p[y]||d[y]||o;return n?a.createElement(g,s(s({ref:t},c),{},{components:n})):a.createElement(g,s({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=y;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:r,s[1]=i;for(var u=2;u<o;u++)s[u]=n[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"},3433:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var a=n(8168),r=(n(6540),n(5680));const o={sidebar_position:4},s="TEXT",i={unversionedId:"sql-syntax/data-types/text",id:"sql-syntax/data-types/text",title:"TEXT",description:"The TEXT data type in SQL is used to store variable-length character strings. In GlueSQL, the TEXT data type is the only supported string data type, providing the ability to store and manage strings of varying lengths.",source:"@site/docs/sql-syntax/data-types/text.md",sourceDirName:"sql-syntax/data-types",slug:"/sql-syntax/data-types/text",permalink:"/docs/dev/sql-syntax/data-types/text",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"autoSidebar",previous:{title:"FLOAT",permalink:"/docs/dev/sql-syntax/data-types/float"},next:{title:"DECIMAL",permalink:"/docs/dev/sql-syntax/data-types/decimal"}},l={},u=[{value:"Creating a table with a TEXT column",id:"creating-a-table-with-a-text-column",level:2},{value:"Inserting data into the TEXT column",id:"inserting-data-into-the-text-column",level:2},{value:"Querying data from the TEXT column",id:"querying-data-from-the-text-column",level:2},{value:"Conclusion",id:"conclusion",level:2}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.yg)(p,(0,a.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"text"},"TEXT"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"TEXT")," data type in SQL is used to store variable-length character strings. In GlueSQL, the TEXT data type is the only supported string data type, providing the ability to store and manage strings of varying lengths."),(0,r.yg)("p",null,"Here's an example of how to create a table, insert data, and query data using the ",(0,r.yg)("inlineCode",{parentName:"p"},"TEXT")," data type:"),(0,r.yg)("h2",{id:"creating-a-table-with-a-text-column"},"Creating a table with a TEXT column"),(0,r.yg)("p",null,"To create a table with a TEXT column, use the following SQL syntax:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE users (username TEXT, email TEXT);\n")),(0,r.yg)("h2",{id:"inserting-data-into-the-text-column"},"Inserting data into the TEXT column"),(0,r.yg)("p",null,"To insert data into the TEXT column, provide the string values:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO users (username, email) VALUES\n    ('user1', 'user1@example.com'),\n    ('user2', 'user2@example.com'),\n    ('user3', 'user3@example.com');\n")),(0,r.yg)("h2",{id:"querying-data-from-the-text-column"},"Querying data from the TEXT column"),(0,r.yg)("p",null,"To query data from the TEXT column, use standard SQL syntax:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"SELECT username, email FROM users;\n")),(0,r.yg)("p",null,"This query will return the following result:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"username | email\n---------|-------------------\nuser1    | user1@example.com\nuser2    | user2@example.com\nuser3    | user3@example.com\n")),(0,r.yg)("h2",{id:"conclusion"},"Conclusion"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"TEXT")," data type is a versatile and essential data type for handling and storing character strings in SQL databases. By understanding the basics of the TEXT data type and its use cases, you can effectively use it in your database designs and operations, ensuring that your applications can manage a wide range of textual data with ease."))}d.isMDXComponent=!0}}]);