"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8590],{5680:(e,n,r)=>{r.d(n,{xA:()=>o,yg:()=>d});var t=r(6540);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function l(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?l(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},l=Object.keys(e);for(t=0;t<l.length;t++)r=l[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)r=l[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var g=t.createContext({}),u=function(e){var n=t.useContext(g),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},o=function(e){var n=u(e.components);return t.createElement(g.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},c=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,l=e.originalType,g=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),p=u(r),c=a,d=p["".concat(g,".").concat(c)]||p[c]||m[c]||l;return r?t.createElement(d,s(s({ref:n},o),{},{components:r})):t.createElement(d,s({ref:n},o))}));function d(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=r.length,s=new Array(l);s[0]=c;var i={};for(var g in n)hasOwnProperty.call(n,g)&&(i[g]=n[g]);i.originalType=e,i[p]="string"==typeof e?e:a,s[1]=i;for(var u=2;u<l;u++)s[u]=r[u];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}c.displayName="MDXCreateElement"},9573:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>g,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var t=r(8168),a=(r(6540),r(5680));const l={},s="DEGREES",i={unversionedId:"sql-syntax/functions/math/degrees",id:"sql-syntax/functions/math/degrees",title:"DEGREES",description:"The DEGREES function is used to convert a given angle value from radians to degrees. It takes a single numeric argument (angle in radians) and returns the angle in degrees.",source:"@site/docs/sql-syntax/functions/math/degrees.md",sourceDirName:"sql-syntax/functions/math",slug:"/sql-syntax/functions/math/degrees",permalink:"/docs/dev/sql-syntax/functions/math/degrees",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"autoSidebar",previous:{title:"COS",permalink:"/docs/dev/sql-syntax/functions/math/cos"},next:{title:"DIV",permalink:"/docs/dev/sql-syntax/functions/math/div"}},g={},u=[{value:"Syntax",id:"syntax",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1: Using DEGREES with float values",id:"example-1-using-degrees-with-float-values",level:3},{value:"Example 2: Using DEGREES with integer values",id:"example-2-using-degrees-with-integer-values",level:3},{value:"Example 3: Using DEGREES with zero",id:"example-3-using-degrees-with-zero",level:3},{value:"Errors",id:"errors",level:2},{value:"Example 4: Using DEGREES with non-numeric values",id:"example-4-using-degrees-with-non-numeric-values",level:3},{value:"Example 5: Using DEGREES with multiple arguments",id:"example-5-using-degrees-with-multiple-arguments",level:3}],o={toc:u},p="wrapper";function m(e){let{components:n,...r}=e;return(0,a.yg)(p,(0,t.A)({},o,r,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"degrees"},"DEGREES"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"DEGREES")," function is used to convert a given angle value from radians to degrees. It takes a single numeric argument (angle in radians) and returns the angle in degrees."),(0,a.yg)("h2",{id:"syntax"},"Syntax"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"DEGREES(value)\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"value"),": A numeric expression (angle in radians) to be converted to degrees.")),(0,a.yg)("h2",{id:"examples"},"Examples"),(0,a.yg)("p",null,"Let's consider a table named ",(0,a.yg)("inlineCode",{parentName:"p"},"SingleItem")," with the following schema:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE SingleItem (id FLOAT);\n")),(0,a.yg)("p",null,"Insert a row into the ",(0,a.yg)("inlineCode",{parentName:"p"},"SingleItem")," table:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO SingleItem VALUES (0);\n")),(0,a.yg)("h3",{id:"example-1-using-degrees-with-float-values"},"Example 1: Using DEGREES with float values"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"SELECT\nDEGREES(180.0) as degrees_1,\nDEGREES(360.0) as degrees_2\nFROM SingleItem;\n")),(0,a.yg)("p",null,"Result:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"   degrees_1 | degrees_2\n-------------+-------------\n10313.240312 | 20626.480624\n")),(0,a.yg)("h3",{id:"example-2-using-degrees-with-integer-values"},"Example 2: Using DEGREES with integer values"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"SELECT DEGREES(90) as degrees_with_int FROM SingleItem;\n")),(0,a.yg)("p",null,"Result:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"degrees_with_int\n-----------------\n     5156.620156\n")),(0,a.yg)("h3",{id:"example-3-using-degrees-with-zero"},"Example 3: Using DEGREES with zero"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"SELECT DEGREES(0) as degrees_with_zero FROM SingleItem;\n")),(0,a.yg)("p",null,"Result:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"degrees_with_zero\n------------------\n         0.0\n")),(0,a.yg)("h2",{id:"errors"},"Errors"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"DEGREES")," function requires a numeric value as its argument. Using non-numeric values or more than one argument will result in an error."),(0,a.yg)("h3",{id:"example-4-using-degrees-with-non-numeric-values"},"Example 4: Using DEGREES with non-numeric values"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"SELECT DEGREES('string') AS degrees FROM SingleItem;\n")),(0,a.yg)("p",null,"Error: Function requires a numeric value."),(0,a.yg)("h3",{id:"example-5-using-degrees-with-multiple-arguments"},"Example 5: Using DEGREES with multiple arguments"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"SELECT DEGREES(0, 0) as degrees_arg2 FROM SingleItem;\n")),(0,a.yg)("p",null,"Error: Function expects 1 argument, but 2 were provided."))}m.isMDXComponent=!0}}]);