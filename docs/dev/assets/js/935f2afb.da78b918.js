"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:t=>{t.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Create a Page","href":"/docs/dev/docs/tutorial-basics/create-a-page","docId":"tutorial-basics/create-a-page"},{"type":"link","label":"Create a Document","href":"/docs/dev/docs/tutorial-basics/create-a-document","docId":"tutorial-basics/create-a-document"},{"type":"link","label":"Create a Blog Post","href":"/docs/dev/docs/tutorial-basics/create-a-blog-post","docId":"tutorial-basics/create-a-blog-post"},{"type":"link","label":"Markdown Features","href":"/docs/dev/docs/tutorial-basics/markdown-features","docId":"tutorial-basics/markdown-features"},{"type":"link","label":"Deploy your site","href":"/docs/dev/docs/tutorial-basics/deploy-your-site","docId":"tutorial-basics/deploy-your-site"},{"type":"link","label":"Congratulations!","href":"/docs/dev/docs/tutorial-basics/congratulations","docId":"tutorial-basics/congratulations"}],"gettingStartedSidebar":[{"type":"link","label":"Rust","href":"/docs/dev/docs/getting-started/rust","docId":"getting-started/rust"},{"type":"link","label":"JavaScript (Web Browser)","href":"/docs/dev/docs/getting-started/javascript-web","docId":"getting-started/javascript-web"},{"type":"link","label":"Node.js","href":"/docs/dev/docs/getting-started/nodejs","docId":"getting-started/nodejs"},{"type":"link","label":"Command-Line Interface","href":"/docs/dev/docs/getting-started/cli","docId":"getting-started/cli"}],"sqlSyntaxSidebar":[{"type":"link","label":"Introduction","href":"/docs/dev/docs/sql-syntax/intro","docId":"sql-syntax/intro"},{"type":"category","label":"Statements","collapsible":true,"collapsed":false,"items":[{"type":"category","label":"Querying","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"WHERE","href":"/docs/dev/docs/sql-syntax/statements/querying/where","docId":"sql-syntax/statements/querying/where"},{"type":"link","label":"JOIN","href":"/docs/dev/docs/sql-syntax/statements/querying/join","docId":"sql-syntax/statements/querying/join"},{"type":"link","label":"LIMIT & OFFSET","href":"/docs/dev/docs/sql-syntax/statements/querying/limit","docId":"sql-syntax/statements/querying/limit"},{"type":"link","label":"Aggregation","href":"/docs/dev/docs/sql-syntax/statements/querying/aggregation","docId":"sql-syntax/statements/querying/aggregation"},{"type":"link","label":"Schemaless Data","href":"/docs/dev/docs/sql-syntax/statements/querying/schemaless","docId":"sql-syntax/statements/querying/schemaless"}]},{"type":"category","label":"Data definition","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CREATE TABLE","href":"/docs/dev/docs/sql-syntax/statements/data-definition/create-table","docId":"sql-syntax/statements/data-definition/create-table"},{"type":"link","label":"DROP TABLE","href":"/docs/dev/docs/sql-syntax/statements/data-definition/drop-table","docId":"sql-syntax/statements/data-definition/drop-table"},{"type":"link","label":"CREATE INDEX","href":"/docs/dev/docs/sql-syntax/statements/data-definition/create-index","docId":"sql-syntax/statements/data-definition/create-index"},{"type":"link","label":"DROP INDEX","href":"/docs/dev/docs/sql-syntax/statements/data-definition/drop-index","docId":"sql-syntax/statements/data-definition/drop-index"},{"type":"link","label":"ALTER TABLE","href":"/docs/dev/docs/sql-syntax/statements/data-definition/alter-table","docId":"sql-syntax/statements/data-definition/alter-table"}]},{"type":"category","label":"Data manipulation","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"INSERT","href":"/docs/dev/docs/sql-syntax/statements/data-manipulation/insert","docId":"sql-syntax/statements/data-manipulation/insert"},{"type":"link","label":"UPDATE","href":"/docs/dev/docs/sql-syntax/statements/data-manipulation/update","docId":"sql-syntax/statements/data-manipulation/update"},{"type":"link","label":"DELETE","href":"/docs/dev/docs/sql-syntax/statements/data-manipulation/delete","docId":"sql-syntax/statements/data-manipulation/delete"}]},{"type":"link","label":"Transaction","href":"/docs/dev/docs/sql-syntax/statements/transaction","docId":"sql-syntax/statements/transaction"},{"type":"category","label":"Metadata","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SHOW TABLES","href":"/docs/dev/docs/sql-syntax/statements/metadata/show-tables","docId":"sql-syntax/statements/metadata/show-tables"},{"type":"link","label":"Data Dictionary","href":"/docs/dev/docs/sql-syntax/statements/metadata/data-dictionary","docId":"sql-syntax/statements/metadata/data-dictionary"}]}]},{"type":"category","label":"Data types","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"BOOLEAN","href":"/docs/dev/docs/sql-syntax/data-types/boolean","docId":"sql-syntax/data-types/boolean"},{"type":"link","label":"Integer Types","href":"/docs/dev/docs/sql-syntax/data-types/integers","docId":"sql-syntax/data-types/integers"},{"type":"link","label":"FLOAT","href":"/docs/dev/docs/sql-syntax/data-types/float","docId":"sql-syntax/data-types/float"},{"type":"link","label":"TEXT","href":"/docs/dev/docs/sql-syntax/data-types/text","docId":"sql-syntax/data-types/text"},{"type":"link","label":"DECIMAL","href":"/docs/dev/docs/sql-syntax/data-types/decimal","docId":"sql-syntax/data-types/decimal"},{"type":"link","label":"DATE","href":"/docs/dev/docs/sql-syntax/data-types/date","docId":"sql-syntax/data-types/date"},{"type":"link","label":"TIMESTAMP","href":"/docs/dev/docs/sql-syntax/data-types/timestamp","docId":"sql-syntax/data-types/timestamp"},{"type":"link","label":"TIME","href":"/docs/dev/docs/sql-syntax/data-types/time","docId":"sql-syntax/data-types/time"},{"type":"link","label":"INTERVAL","href":"/docs/dev/docs/sql-syntax/data-types/interval","docId":"sql-syntax/data-types/interval"},{"type":"link","label":"LIST","href":"/docs/dev/docs/sql-syntax/data-types/list","docId":"sql-syntax/data-types/list"},{"type":"link","label":"MAP","href":"/docs/dev/docs/sql-syntax/data-types/map","docId":"sql-syntax/data-types/map"},{"type":"link","label":"BYTEA","href":"/docs/dev/docs/sql-syntax/data-types/bytea","docId":"sql-syntax/data-types/bytea"},{"type":"link","label":"INET","href":"/docs/dev/docs/sql-syntax/data-types/inet","docId":"sql-syntax/data-types/inet"},{"type":"link","label":"UUID","href":"/docs/dev/docs/sql-syntax/data-types/uuid","docId":"sql-syntax/data-types/uuid"}]},{"type":"category","label":"Functions","collapsible":true,"collapsed":false,"items":[{"type":"category","label":"Text","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ASCII","href":"/docs/dev/docs/sql-syntax/functions/text/ascii","docId":"sql-syntax/functions/text/ascii"},{"type":"link","label":"CHR","href":"/docs/dev/docs/sql-syntax/functions/text/chr","docId":"sql-syntax/functions/text/chr"},{"type":"link","label":"CONCAT_WS","href":"/docs/dev/docs/sql-syntax/functions/text/concat-ws","docId":"sql-syntax/functions/text/concat-ws"},{"type":"link","label":"CONCAT","href":"/docs/dev/docs/sql-syntax/functions/text/concat","docId":"sql-syntax/functions/text/concat"},{"type":"link","label":"FIND_IDX","href":"/docs/dev/docs/sql-syntax/functions/text/find-idx","docId":"sql-syntax/functions/text/find-idx"},{"type":"link","label":"INITCAP","href":"/docs/dev/docs/sql-syntax/functions/text/initcap","docId":"sql-syntax/functions/text/initcap"},{"type":"link","label":"LEFT","href":"/docs/dev/docs/sql-syntax/functions/text/left","docId":"sql-syntax/functions/text/left"},{"type":"link","label":"LOWER","href":"/docs/dev/docs/sql-syntax/functions/text/lower","docId":"sql-syntax/functions/text/lower"},{"type":"link","label":"LPAD","href":"/docs/dev/docs/sql-syntax/functions/text/lpad","docId":"sql-syntax/functions/text/lpad"},{"type":"link","label":"LTRIM","href":"/docs/dev/docs/sql-syntax/functions/text/ltrim","docId":"sql-syntax/functions/text/ltrim"},{"type":"link","label":"POSITION","href":"/docs/dev/docs/sql-syntax/functions/text/position","docId":"sql-syntax/functions/text/position"},{"type":"link","label":"REPEAT","href":"/docs/dev/docs/sql-syntax/functions/text/repeat","docId":"sql-syntax/functions/text/repeat"},{"type":"link","label":"REVERSE","href":"/docs/dev/docs/sql-syntax/functions/text/reverse","docId":"sql-syntax/functions/text/reverse"},{"type":"link","label":"RIGHT","href":"/docs/dev/docs/sql-syntax/functions/text/right","docId":"sql-syntax/functions/text/right"},{"type":"link","label":"RPAD","href":"/docs/dev/docs/sql-syntax/functions/text/rpad","docId":"sql-syntax/functions/text/rpad"},{"type":"link","label":"RTRIM","href":"/docs/dev/docs/sql-syntax/functions/text/rtrim","docId":"sql-syntax/functions/text/rtrim"},{"type":"link","label":"SUBSTR","href":"/docs/dev/docs/sql-syntax/functions/text/substr","docId":"sql-syntax/functions/text/substr"},{"type":"link","label":"TRIM","href":"/docs/dev/docs/sql-syntax/functions/text/trim","docId":"sql-syntax/functions/text/trim"},{"type":"link","label":"UPPER","href":"/docs/dev/docs/sql-syntax/functions/text/upper","docId":"sql-syntax/functions/text/upper"}]},{"type":"category","label":"Math","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ABS","href":"/docs/dev/docs/sql-syntax/functions/math/abs","docId":"sql-syntax/functions/math/abs"},{"type":"link","label":"ACOS","href":"/docs/dev/docs/sql-syntax/functions/math/acos","docId":"sql-syntax/functions/math/acos"},{"type":"link","label":"ASIN","href":"/docs/dev/docs/sql-syntax/functions/math/asin","docId":"sql-syntax/functions/math/asin"},{"type":"link","label":"ATAN","href":"/docs/dev/docs/sql-syntax/functions/math/atan","docId":"sql-syntax/functions/math/atan"},{"type":"link","label":"CEIL","href":"/docs/dev/docs/sql-syntax/functions/math/ceil","docId":"sql-syntax/functions/math/ceil"},{"type":"link","label":"COS","href":"/docs/dev/docs/sql-syntax/functions/math/cos","docId":"sql-syntax/functions/math/cos"},{"type":"link","label":"DEGREES","href":"/docs/dev/docs/sql-syntax/functions/math/degrees","docId":"sql-syntax/functions/math/degrees"},{"type":"link","label":"DIV","href":"/docs/dev/docs/sql-syntax/functions/math/div","docId":"sql-syntax/functions/math/div"},{"type":"link","label":"EXP","href":"/docs/dev/docs/sql-syntax/functions/math/exp","docId":"sql-syntax/functions/math/exp"},{"type":"link","label":"FLOOR","href":"/docs/dev/docs/sql-syntax/functions/math/floor","docId":"sql-syntax/functions/math/floor"},{"type":"link","label":"GCD","href":"/docs/dev/docs/sql-syntax/functions/math/gcd","docId":"sql-syntax/functions/math/gcd"},{"type":"link","label":"LCM","href":"/docs/dev/docs/sql-syntax/functions/math/lcm","docId":"sql-syntax/functions/math/lcm"},{"type":"link","label":"LN","href":"/docs/dev/docs/sql-syntax/functions/math/ln","docId":"sql-syntax/functions/math/ln"},{"type":"link","label":"LOG","href":"/docs/dev/docs/sql-syntax/functions/math/log","docId":"sql-syntax/functions/math/log"},{"type":"link","label":"LOG10","href":"/docs/dev/docs/sql-syntax/functions/math/log10","docId":"sql-syntax/functions/math/log10"},{"type":"link","label":"LOG2","href":"/docs/dev/docs/sql-syntax/functions/math/log2","docId":"sql-syntax/functions/math/log2"},{"type":"link","label":"MOD","href":"/docs/dev/docs/sql-syntax/functions/math/mod","docId":"sql-syntax/functions/math/mod"},{"type":"link","label":"PI","href":"/docs/dev/docs/sql-syntax/functions/math/pi","docId":"sql-syntax/functions/math/pi"},{"type":"link","label":"POWER","href":"/docs/dev/docs/sql-syntax/functions/math/power","docId":"sql-syntax/functions/math/power"},{"type":"link","label":"RAND","href":"/docs/dev/docs/sql-syntax/functions/math/rand","docId":"sql-syntax/functions/math/rand"},{"type":"link","label":"RADIANS","href":"/docs/dev/docs/sql-syntax/functions/math/randians","docId":"sql-syntax/functions/math/randians"},{"type":"link","label":"ROUND","href":"/docs/dev/docs/sql-syntax/functions/math/round","docId":"sql-syntax/functions/math/round"},{"type":"link","label":"SIGN","href":"/docs/dev/docs/sql-syntax/functions/math/sign","docId":"sql-syntax/functions/math/sign"},{"type":"link","label":"SIN","href":"/docs/dev/docs/sql-syntax/functions/math/sin","docId":"sql-syntax/functions/math/sin"},{"type":"link","label":"SQRT","href":"/docs/dev/docs/sql-syntax/functions/math/sqrt","docId":"sql-syntax/functions/math/sqrt"},{"type":"link","label":"TAN","href":"/docs/dev/docs/sql-syntax/functions/math/tan","docId":"sql-syntax/functions/math/tan"}]},{"type":"category","label":"Date & Time","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"EXTRACT","href":"/docs/dev/docs/sql-syntax/functions/datetime/extract","docId":"sql-syntax/functions/datetime/extract"},{"type":"link","label":"FORMAT","href":"/docs/dev/docs/sql-syntax/functions/datetime/format","docId":"sql-syntax/functions/datetime/format"},{"type":"link","label":"NOW","href":"/docs/dev/docs/sql-syntax/functions/datetime/now","docId":"sql-syntax/functions/datetime/now"},{"type":"link","label":"TO_DATE","href":"/docs/dev/docs/sql-syntax/functions/datetime/to-date","docId":"sql-syntax/functions/datetime/to-date"},{"type":"link","label":"TO_TIME","href":"/docs/dev/docs/sql-syntax/functions/datetime/to-time","docId":"sql-syntax/functions/datetime/to-time"},{"type":"link","label":"TO_TIMESTAMP","href":"/docs/dev/docs/sql-syntax/functions/datetime/to-timestamp","docId":"sql-syntax/functions/datetime/to-timestamp"}]},{"type":"category","label":"List & Map","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"APPEND","href":"/docs/dev/docs/sql-syntax/functions/list-map/append","docId":"sql-syntax/functions/list-map/append"},{"type":"link","label":"PREPEND","href":"/docs/dev/docs/sql-syntax/functions/list-map/prepend","docId":"sql-syntax/functions/list-map/prepend"}]},{"type":"category","label":"Geometry","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CALC_DISTANCE","href":"/docs/dev/docs/sql-syntax/functions/geometry/calc-distance","docId":"sql-syntax/functions/geometry/calc-distance"},{"type":"link","label":"GET_X","href":"/docs/dev/docs/sql-syntax/functions/geometry/get-x","docId":"sql-syntax/functions/geometry/get-x"},{"type":"link","label":"GET_Y","href":"/docs/dev/docs/sql-syntax/functions/geometry/get-y","docId":"sql-syntax/functions/geometry/get-y"},{"type":"link","label":"POINT","href":"/docs/dev/docs/sql-syntax/functions/geometry/point","docId":"sql-syntax/functions/geometry/point"}]},{"type":"category","label":"Others","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CAST","href":"/docs/dev/docs/sql-syntax/functions/others/cast","docId":"sql-syntax/functions/others/cast"},{"type":"link","label":"GENERATE_UUID","href":"/docs/dev/docs/sql-syntax/functions/others/generate-uuid","docId":"sql-syntax/functions/others/generate-uuid"},{"type":"link","label":"IF_NULL","href":"/docs/dev/docs/sql-syntax/functions/others/if-null","docId":"sql-syntax/functions/others/if-null"}]}]}],"astBuilderSidebar":[{"type":"link","label":"Introduction","href":"/docs/dev/docs/ast-builder/intro","docId":"ast-builder/intro"},{"type":"category","label":"Querying Data","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Fetching Data from Storage","href":"/docs/dev/docs/ast-builder/querying-data/fetching-data-from-storage","docId":"ast-builder/querying-data/fetching-data-from-storage"},{"type":"link","label":"Using Preloaded Data","href":"/docs/dev/docs/ast-builder/querying-data/using-preloaded-data","docId":"ast-builder/querying-data/using-preloaded-data"},{"type":"link","label":"Creating Derived Subqueries","href":"/docs/dev/docs/ast-builder/querying-data/creating-derived-subqueries","docId":"ast-builder/querying-data/creating-derived-subqueries"}]},{"type":"link","label":"Inserting Data","href":"/docs/dev/docs/ast-builder/inserting-data","docId":"ast-builder/inserting-data"},{"type":"link","label":"Updating Data","href":"/docs/dev/docs/ast-builder/updating-data","docId":"ast-builder/updating-data"},{"type":"link","label":"Deleting Data","href":"/docs/dev/docs/ast-builder/deleting-data","docId":"ast-builder/deleting-data"}],"customStorageSidebar":[{"type":"link","label":"Introduction","href":"/docs/dev/docs/storages/intro","docId":"storages/intro"},{"type":"category","label":"Supported Storages","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Memory Storage","href":"/docs/dev/docs/storages/supported-storages/memory-storage","docId":"storages/supported-storages/memory-storage"},{"type":"link","label":"Shared Memory Storage","href":"/docs/dev/docs/storages/supported-storages/shared-memory-storage","docId":"storages/supported-storages/shared-memory-storage"},{"type":"link","label":"Sled Storage","href":"/docs/dev/docs/storages/supported-storages/sled-storage","docId":"storages/supported-storages/sled-storage"},{"type":"link","label":"JSON Storage","href":"/docs/dev/docs/storages/supported-storages/json-storage","docId":"storages/supported-storages/json-storage"},{"type":"link","label":"Web Storage (local & session)","href":"/docs/dev/docs/storages/supported-storages/web-storage","docId":"storages/supported-storages/web-storage"},{"type":"link","label":"IndexedDB Storage","href":"/docs/dev/docs/storages/supported-storages/idb-storage","docId":"storages/supported-storages/idb-storage"}]},{"type":"category","label":"Developing Custom Storages","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Introduction","href":"/docs/dev/docs/storages/developing-custom-storages/intro","docId":"storages/developing-custom-storages/intro"},{"type":"category","label":"Understanding Store traits","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Store","href":"/docs/dev/docs/storages/developing-custom-storages/store-traits/store","docId":"storages/developing-custom-storages/store-traits/store"},{"type":"link","label":"StoreMut","href":"/docs/dev/docs/storages/developing-custom-storages/store-traits/store-mut","docId":"storages/developing-custom-storages/store-traits/store-mut"},{"type":"link","label":"AlterTable","href":"/docs/dev/docs/storages/developing-custom-storages/store-traits/alter-table","docId":"storages/developing-custom-storages/store-traits/alter-table"},{"type":"link","label":"Transaction","href":"/docs/dev/docs/storages/developing-custom-storages/store-traits/transaction","docId":"storages/developing-custom-storages/store-traits/transaction"},{"type":"link","label":"CustomFunction","href":"/docs/dev/docs/storages/developing-custom-storages/store-traits/custom-function","docId":"storages/developing-custom-storages/store-traits/custom-function"},{"type":"link","label":"CustomFunctionMut","href":"/docs/dev/docs/storages/developing-custom-storages/store-traits/custom-function-mut","docId":"storages/developing-custom-storages/store-traits/custom-function-mut"},{"type":"link","label":"Index","href":"/docs/dev/docs/storages/developing-custom-storages/store-traits/index-trait","docId":"storages/developing-custom-storages/store-traits/index-trait"},{"type":"link","label":"IndexMut","href":"/docs/dev/docs/storages/developing-custom-storages/store-traits/index-mut","docId":"storages/developing-custom-storages/store-traits/index-mut"},{"type":"link","label":"Metadata","href":"/docs/dev/docs/storages/developing-custom-storages/store-traits/metadata","docId":"storages/developing-custom-storages/store-traits/metadata"}]},{"type":"link","label":"Using the Test Suite","href":"/docs/dev/docs/storages/developing-custom-storages/using-test-suite","docId":"storages/developing-custom-storages/using-test-suite"}]}]},"docs":{"ast-builder/deleting-data":{"id":"ast-builder/deleting-data","title":"Deleting Data","description":"In this section, we will discuss how to delete data from a table using GlueSQL.","sidebar":"astBuilderSidebar"},"ast-builder/inserting-data":{"id":"ast-builder/inserting-data","title":"Inserting Data","description":"In this section, we will discuss how to insert data into a table using GlueSQL.","sidebar":"astBuilderSidebar"},"ast-builder/intro":{"id":"ast-builder/intro","title":"Introduction","description":"GlueSQL offers two ways to create and execute queries: using SQL statements or using the AST Builder. In this introductory page, we will focus on the AST Builder.","sidebar":"astBuilderSidebar"},"ast-builder/querying-data/creating-derived-subqueries":{"id":"ast-builder/querying-data/creating-derived-subqueries","title":"Creating Derived Subqueries","description":"This document covers the aliasas functionality of the AST Builder in the GlueSQL project. The aliasas method allows you to create a derived subquery, which is similar to subqueries in SQL. It gives you the ability to use the output of a query as a table to perform further queries.","sidebar":"astBuilderSidebar"},"ast-builder/querying-data/fetching-data-from-storage":{"id":"ast-builder/querying-data/fetching-data-from-storage","title":"Fetching Data from Storage","description":"The AST Builder provides a powerful and flexible way to query data from your tables, similar to SQL\'s SELECT statement. This guide will show you how to use the AST Builder\'s table(\\"foo\\").select() method to perform various query types, including filtering, joining, grouping, ordering, and pagination.","sidebar":"astBuilderSidebar"},"ast-builder/querying-data/using-preloaded-data":{"id":"ast-builder/querying-data/using-preloaded-data","title":"Using Preloaded Data","description":"This guide will show you how to use AST Builder to query data that has already been loaded into memory, as opposed to querying data from storage. This is similar to SQL\'s VALUES functionality.","sidebar":"astBuilderSidebar"},"ast-builder/updating-data":{"id":"ast-builder/updating-data","title":"Updating Data","description":"In this section, we will discuss how to update data in a table using GlueSQL.","sidebar":"astBuilderSidebar"},"getting-started/cli":{"id":"getting-started/cli","title":"Command-Line Interface","description":"","sidebar":"gettingStartedSidebar"},"getting-started/javascript-web":{"id":"getting-started/javascript-web","title":"JavaScript (Web Browser)","description":"GlueSQL is a SQL database engine written in Rust, compiled to WebAssembly, and can be used in JavaScript. This guide will walk you through the process of installing and using the GlueSQL package.","sidebar":"gettingStartedSidebar"},"getting-started/nodejs":{"id":"getting-started/nodejs","title":"Node.js","description":"This guide will help you get started with GlueSQL in a Node.js project. First, install the gluesql package using npm by running the following command in your terminal:","sidebar":"gettingStartedSidebar"},"getting-started/rust":{"id":"getting-started/rust","title":"Rust","description":"To install and use GlueSQL in your Rust project, you\'ll first need to add it as a dependency from crates.io. You can do this by adding the following lines to your Cargo.toml file:","sidebar":"gettingStartedSidebar"},"intro":{"id":"intro","title":"Tutorial Intro","description":"Let\'s discover Docusaurus in less than 5 minutes."},"sql-syntax/data-types/boolean":{"id":"sql-syntax/data-types/boolean","title":"BOOLEAN","description":"The BOOLEAN data type in SQL is used to store boolean values, which can be either TRUE or FALSE. This data type is useful for representing binary states or conditions in your data.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/data-types/bytea":{"id":"sql-syntax/data-types/bytea","title":"BYTEA","description":"The BYTEA data type in SQL is used to store binary data, such as images, audio files, or any other type of data that needs to be stored in its raw form. In GlueSQL, the BYTEA data type is represented as a sequence of bytes.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/data-types/date":{"id":"sql-syntax/data-types/date","title":"DATE","description":"In GlueSQL, the DATE data type is used to store date values in the format \'YYYY-MM-DD\'. Note that GlueSQL currently does not support timezones.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/data-types/decimal":{"id":"sql-syntax/data-types/decimal","title":"DECIMAL","description":"The DECIMAL data type in SQL is used to store exact numeric values, making it suitable for financial calculations and other operations requiring a high level of precision without round-off errors. In GlueSQL, the DECIMAL data type is implemented using a pure Rust library, providing a 96-bit integer number, a scaling factor for specifying the decimal fraction, and a 1-bit sign.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/data-types/float":{"id":"sql-syntax/data-types/float","title":"FLOAT","description":"The FLOAT data type in SQL is used to store floating-point numbers. In GlueSQL, the FLOAT data type represents a 64-bit floating-point number, providing the ability to store numbers with decimal values and a wide range of magnitude.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/data-types/inet":{"id":"sql-syntax/data-types/inet","title":"INET","description":"The INET data type in SQL is used to store IPv4 and IPv6 addresses. These addresses can be compared, filtered, and sorted using standard SQL operations.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/data-types/integers":{"id":"sql-syntax/data-types/integers","title":"Integer Types","description":"GlueSQL supports the following integer data types:","sidebar":"sqlSyntaxSidebar"},"sql-syntax/data-types/interval":{"id":"sql-syntax/data-types/interval","title":"INTERVAL","description":"The INTERVAL data type in GlueSQL is used to represent a period of time. In accordance with the ANSI SQL standard, several subtypes of INTERVAL can be used to represent different units of time, such as years, months, days, hours, minutes, and seconds. These subtypes are:","sidebar":"sqlSyntaxSidebar"},"sql-syntax/data-types/list":{"id":"sql-syntax/data-types/list","title":"LIST","description":"The LIST data type in GlueSQL is used to store ordered collections of elements, similar to JSON arrays. The elements can be any valid data supported by GlueSQL, such as numbers, strings, booleans, null, MAP, or even other nested LIST values. Although the input is provided in a JSON array format for convenience, it can store more than just JSON data.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/data-types/map":{"id":"sql-syntax/data-types/map","title":"MAP","description":"The MAP data type in GlueSQL is used to store nested key-value pairs, similar to JSON objects. The object keys must be strings, and the values can be any valid data supported by GlueSQL, such as numbers, strings, booleans, null, or even other nested MAP values. Although the input is provided in a JSON object format for convenience, it can store more than just JSON data.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/data-types/text":{"id":"sql-syntax/data-types/text","title":"TEXT","description":"The TEXT data type in SQL is used to store variable-length character strings. In GlueSQL, the TEXT data type is the only supported string data type, providing the ability to store and manage strings of varying lengths.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/data-types/time":{"id":"sql-syntax/data-types/time","title":"TIME","description":"In GlueSQL, the TIME data type is used to store time values in the format \'HHSS.SSS\'. The code snippet provided demonstrates how to create a table with TIME columns, insert data into it, and perform various queries and operations on the data.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/data-types/timestamp":{"id":"sql-syntax/data-types/timestamp","title":"TIMESTAMP","description":"In GlueSQL, the TIMESTAMP data type is used to store date and time values in the format \'YYYY-MM-DD HHSS.SSSS\'. Although timezone information can be included in the input string, GlueSQL stores all TIMESTAMP values in UTC, discarding the timezone information.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/data-types/uuid":{"id":"sql-syntax/data-types/uuid","title":"UUID","description":"The UUID data type in SQL is used to store universally unique identifiers (UUIDs). These identifiers can be compared, filtered, and sorted using standard SQL operations.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/datetime/extract":{"id":"sql-syntax/functions/datetime/extract","title":"EXTRACT","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/datetime/format":{"id":"sql-syntax/functions/datetime/format","title":"FORMAT","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/datetime/now":{"id":"sql-syntax/functions/datetime/now","title":"NOW","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/datetime/to-date":{"id":"sql-syntax/functions/datetime/to-date","title":"TO_DATE","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/datetime/to-time":{"id":"sql-syntax/functions/datetime/to-time","title":"TO_TIME","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/datetime/to-timestamp":{"id":"sql-syntax/functions/datetime/to-timestamp","title":"TO_TIMESTAMP","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/geometry/calc-distance":{"id":"sql-syntax/functions/geometry/calc-distance","title":"CALC_DISTANCE","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/geometry/get-x":{"id":"sql-syntax/functions/geometry/get-x","title":"GET_X","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/geometry/get-y":{"id":"sql-syntax/functions/geometry/get-y","title":"GET_Y","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/geometry/point":{"id":"sql-syntax/functions/geometry/point","title":"POINT","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/list-map/append":{"id":"sql-syntax/functions/list-map/append","title":"APPEND","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/list-map/prepend":{"id":"sql-syntax/functions/list-map/prepend","title":"PREPEND","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/abs":{"id":"sql-syntax/functions/math/abs","title":"ABS","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/acos":{"id":"sql-syntax/functions/math/acos","title":"ACOS","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/asin":{"id":"sql-syntax/functions/math/asin","title":"ASIN","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/atan":{"id":"sql-syntax/functions/math/atan","title":"ATAN","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/ceil":{"id":"sql-syntax/functions/math/ceil","title":"CEIL","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/cos":{"id":"sql-syntax/functions/math/cos","title":"COS","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/degrees":{"id":"sql-syntax/functions/math/degrees","title":"DEGREES","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/div":{"id":"sql-syntax/functions/math/div","title":"DIV","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/exp":{"id":"sql-syntax/functions/math/exp","title":"EXP","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/floor":{"id":"sql-syntax/functions/math/floor","title":"FLOOR","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/gcd":{"id":"sql-syntax/functions/math/gcd","title":"GCD","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/lcm":{"id":"sql-syntax/functions/math/lcm","title":"LCM","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/ln":{"id":"sql-syntax/functions/math/ln","title":"LN","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/log":{"id":"sql-syntax/functions/math/log","title":"LOG","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/log10":{"id":"sql-syntax/functions/math/log10","title":"LOG10","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/log2":{"id":"sql-syntax/functions/math/log2","title":"LOG2","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/mod":{"id":"sql-syntax/functions/math/mod","title":"MOD","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/pi":{"id":"sql-syntax/functions/math/pi","title":"PI","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/power":{"id":"sql-syntax/functions/math/power","title":"POWER","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/rand":{"id":"sql-syntax/functions/math/rand","title":"RAND","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/randians":{"id":"sql-syntax/functions/math/randians","title":"RADIANS","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/round":{"id":"sql-syntax/functions/math/round","title":"ROUND","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/sign":{"id":"sql-syntax/functions/math/sign","title":"SIGN","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/sin":{"id":"sql-syntax/functions/math/sin","title":"SIN","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/sqrt":{"id":"sql-syntax/functions/math/sqrt","title":"SQRT","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/math/tan":{"id":"sql-syntax/functions/math/tan","title":"TAN","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/others/cast":{"id":"sql-syntax/functions/others/cast","title":"CAST","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/others/generate-uuid":{"id":"sql-syntax/functions/others/generate-uuid","title":"GENERATE_UUID","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/others/if-null":{"id":"sql-syntax/functions/others/if-null","title":"IF_NULL","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/text/ascii":{"id":"sql-syntax/functions/text/ascii","title":"ASCII","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/text/chr":{"id":"sql-syntax/functions/text/chr","title":"CHR","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/text/concat":{"id":"sql-syntax/functions/text/concat","title":"CONCAT","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/text/concat-ws":{"id":"sql-syntax/functions/text/concat-ws","title":"CONCAT_WS","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/text/find-idx":{"id":"sql-syntax/functions/text/find-idx","title":"FIND_IDX","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/text/initcap":{"id":"sql-syntax/functions/text/initcap","title":"INITCAP","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/text/left":{"id":"sql-syntax/functions/text/left","title":"LEFT","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/text/lower":{"id":"sql-syntax/functions/text/lower","title":"LOWER","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/text/lpad":{"id":"sql-syntax/functions/text/lpad","title":"LPAD","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/text/ltrim":{"id":"sql-syntax/functions/text/ltrim","title":"LTRIM","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/text/position":{"id":"sql-syntax/functions/text/position","title":"POSITION","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/text/repeat":{"id":"sql-syntax/functions/text/repeat","title":"REPEAT","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/text/reverse":{"id":"sql-syntax/functions/text/reverse","title":"REVERSE","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/text/right":{"id":"sql-syntax/functions/text/right","title":"RIGHT","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/text/rpad":{"id":"sql-syntax/functions/text/rpad","title":"RPAD","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/text/rtrim":{"id":"sql-syntax/functions/text/rtrim","title":"RTRIM","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/text/substr":{"id":"sql-syntax/functions/text/substr","title":"SUBSTR","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/text/trim":{"id":"sql-syntax/functions/text/trim","title":"TRIM","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/functions/text/upper":{"id":"sql-syntax/functions/text/upper","title":"UPPER","description":"","sidebar":"sqlSyntaxSidebar"},"sql-syntax/intro":{"id":"sql-syntax/intro","title":"Introduction","description":"Welcome to the Introduction page for the SQL Syntax category in GlueSQL! In this section, we\'ll provide a brief overview of the SQL syntax supported by GlueSQL. You can find more in-depth examples and details by browsing the other pages in this category.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/statements/data-definition/alter-table":{"id":"sql-syntax/statements/data-definition/alter-table","title":"ALTER TABLE","description":"The ALTER TABLE statement is an SQL command used to modify the structure of an existing table in a database. This operation is useful when you need to add, remove, or modify columns or constraints in a table. In this document, we\'ll explain the syntax and usage of the ALTER TABLE statement, including the RENAME, ADD COLUMN, and DROP COLUMN clauses.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/statements/data-definition/create-index":{"id":"sql-syntax/statements/data-definition/create-index","title":"CREATE INDEX","description":"CREATE INDEX statement is used to create an index on one or more columns of a table. Indexes can improve query performance by allowing the database to quickly locate rows with specific column values. They can also be used with the ORDER BY clause to improve sorting performance. An index can be thought of as a data structure that maps the values of a specific column or columns to the corresponding rows in a table. This mapping allows the database to perform lookups and sorting operations more efficiently, as it does not have to scan the entire table.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/statements/data-definition/create-table":{"id":"sql-syntax/statements/data-definition/create-table","title":"CREATE TABLE","description":"The CREATE TABLE statement is a fundamental SQL command used to create a new table in a database. Tables are the primary structure in databases, as they hold the data organized in rows and columns. In this document, we\'ll explain the syntax and usage of the CREATE TABLE statement, including the IF NOT EXISTS clause.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/statements/data-definition/drop-index":{"id":"sql-syntax/statements/data-definition/drop-index","title":"DROP INDEX","description":"DROP INDEX statement is used to remove an existing index from a table. This can be useful when an index is no longer needed, or if you want to free up storage space and reduce maintenance overhead associated with maintaining the index.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/statements/data-definition/drop-table":{"id":"sql-syntax/statements/data-definition/drop-table","title":"DROP TABLE","description":"The DROP TABLE statement is an SQL command used to remove one or more tables from a database. This operation is useful when you no longer need a table or want to clear out old data structures. In this document, we\'ll explain the syntax and usage of the DROP TABLE statement, including the IF EXISTS clause and dropping multiple tables at once.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/statements/data-manipulation/delete":{"id":"sql-syntax/statements/data-manipulation/delete","title":"DELETE","description":"The DELETE statement is used to remove records from a table. You can delete a single row, multiple rows, or all rows at once based on specific conditions.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/statements/data-manipulation/insert":{"id":"sql-syntax/statements/data-manipulation/insert","title":"INSERT","description":"The INSERT statement is used to insert new records into a table. You can insert a single row or multiple rows at once, and you can also use the NULL, NOT NULL, and DEFAULT constraints to define how values are inserted.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/statements/data-manipulation/update":{"id":"sql-syntax/statements/data-manipulation/update","title":"UPDATE","description":"The UPDATE statement is used to modify existing records in a table. You can update one or more columns with new values, or even use subqueries to update values based on other tables.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/statements/metadata/data-dictionary":{"id":"sql-syntax/statements/metadata/data-dictionary","title":"Data Dictionary","description":"In GlueSQL, there are predefined tables, also known as Data Dictionary tables, which store metadata about the database objects like tables, columns, and indexes. These tables can be queried like any other table in the database, and they provide useful information about the database schema.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/statements/metadata/show-tables":{"id":"sql-syntax/statements/metadata/show-tables","title":"SHOW TABLES","description":"The SHOW TABLES statement in GlueSQL is used to display a list of tables available in the database. This statement is useful when you want to inspect the current structure of your database or when you want to manage multiple tables.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/statements/querying/aggregation":{"id":"sql-syntax/statements/querying/aggregation","title":"Aggregation","description":"GlueSQL supports several aggregate functions to perform calculations on a set of values. Below is a list of supported aggregate functions along with a brief explanation of each:","sidebar":"sqlSyntaxSidebar"},"sql-syntax/statements/querying/join":{"id":"sql-syntax/statements/querying/join","title":"JOIN","description":"GlueSQL supports two types of JOIN operations:","sidebar":"sqlSyntaxSidebar"},"sql-syntax/statements/querying/limit":{"id":"sql-syntax/statements/querying/limit","title":"LIMIT & OFFSET","description":"LIMIT and OFFSET are SQL clauses that allow you to control the number of rows returned by a SELECT statement. They are particularly useful when you need to paginate or retrieve a specific portion of the result set.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/statements/querying/schemaless":{"id":"sql-syntax/statements/querying/schemaless","title":"Schemaless Data","description":"GlueSQL is an SQL database that provides a unique feature: it allows you to work with schemaless data, similar to NoSQL databases. Please note this point in the documentation.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/statements/querying/where":{"id":"sql-syntax/statements/querying/where","title":"WHERE","description":"In GlueSQL, the WHERE clause is used to filter the results of a SELECT query based on specific conditions. The WHERE clause can be used with various operators and functions to create complex filtering conditions.","sidebar":"sqlSyntaxSidebar"},"sql-syntax/statements/transaction":{"id":"sql-syntax/statements/transaction","title":"Transaction","description":"Transactions in SQL are a series of queries that are executed as a single unit of work. In GlueSQL, transactions help to ensure the consistency and integrity of the database. They follow the ACID properties: Atomicity, Consistency, Isolation, and Durability.","sidebar":"sqlSyntaxSidebar"},"storages/developing-custom-storages/intro":{"id":"storages/developing-custom-storages/intro","title":"Introduction","description":"With GlueSQL, you can adapt SQL and the AST Builder to a wide variety of environments. This includes file systems, key-value databases, complex NoSQL databases, and even remote APIs. As long as a system supports reading, it can support SELECT queries. If it supports both reading and writing, it can support most SQL operations, including UPDATE and DELETE.","sidebar":"customStorageSidebar"},"storages/developing-custom-storages/store-traits/alter-table":{"id":"storages/developing-custom-storages/store-traits/alter-table","title":"AlterTable","description":"The AlterTable trait corresponds to the SQL ALTER TABLE statement and is used for modifying existing schemas. It is not necessary to implement the AlterTable trait. If you are dealing with data that is difficult to modify schema-wise or schemaless data, there is no need to implement the AlterTable trait. It is an optional trait that custom storage developers can choose to implement.","sidebar":"customStorageSidebar"},"storages/developing-custom-storages/store-traits/custom-function":{"id":"storages/developing-custom-storages/store-traits/custom-function","title":"CustomFunction","description":"The CustomFunction trait is an optional trait for supporting user-level custom functions. Through the CustomFunction trait, you can retrieve custom functions stored in the storage system. You can choose to implement the CustomFunction trait alone or together with the CustomFunctionMut trait.","sidebar":"customStorageSidebar"},"storages/developing-custom-storages/store-traits/custom-function-mut":{"id":"storages/developing-custom-storages/store-traits/custom-function-mut","title":"CustomFunctionMut","description":"By implementing both the CustomFunction and CustomFunctionMut traits, users can create, use, and delete user-level custom functions. Although GlueSQL plans to continuously add various functions, users may still find them insufficient. In such cases, users can create their own user-level custom functions to supplement the built-in functions. Additionally, if there are repetitive business logic codes, they can be stored as custom functions.","sidebar":"customStorageSidebar"},"storages/developing-custom-storages/store-traits/index-mut":{"id":"storages/developing-custom-storages/store-traits/index-mut","title":"IndexMut","description":"The IndexMut trait, when implemented along with the Index trait, allows custom storage developers to provide users with the ability to create, use, and delete non-clustered indexes. Implementing the IndexMut trait enhances the storage system\'s capabilities by providing support for dynamic index management.","sidebar":"customStorageSidebar"},"storages/developing-custom-storages/store-traits/index-trait":{"id":"storages/developing-custom-storages/store-traits/index-trait","title":"Index","description":"The Index trait is designed to support non-clustered indexes. If you only need to support pre-built non-clustered indexes, implementing the Index trait without the IndexMut trait is sufficient. Note that clustered indexes (PRIMARY KEY) are automatically supported by the Store & StoreMut implementations. The Index trait is specifically for non-clustered index support.","sidebar":"customStorageSidebar"},"storages/developing-custom-storages/store-traits/metadata":{"id":"storages/developing-custom-storages/store-traits/metadata","title":"Metadata","description":"The Metadata trait is an optional implementation for providing additional metadata support in GlueSQL. GlueSQL does not enforce any specific metadata implementation, allowing custom storage developers to decide which type of metadata, such as create time, modify time, etc., they want to provide.","sidebar":"customStorageSidebar"},"storages/developing-custom-storages/store-traits/store":{"id":"storages/developing-custom-storages/store-traits/store","title":"Store","description":"The Store trait is the most essential trait to implement for custom storage. Simply by implementing the Store trait, you can support SELECT queries in SQL. You may want to analyze and retrieve data from log files or external APIs using SQL. In this case, having only SELECT queries available is sufficient, and there might not be any need for data modification. In such scenarios, implementing GlueSQL\'s Store trait alone would be adequate.","sidebar":"customStorageSidebar"},"storages/developing-custom-storages/store-traits/store-mut":{"id":"storages/developing-custom-storages/store-traits/store-mut","title":"StoreMut","description":"While the Store trait is for supporting SELECT queries and reading data, the StoreMut trait is for modifying data. Implementing the StoreMut trait requires the implementation of the Store trait as well. By implementing both the Store and StoreMut traits, you can support most of the commonly used SQL statements. Additionally, you can use the Test Suite to utilize the integration test set provided by GlueSQL. Custom storage developers can verify their own Store & StoreMut implementations by checking if they pass all the tests provided in the Test Suite.","sidebar":"customStorageSidebar"},"storages/developing-custom-storages/store-traits/transaction":{"id":"storages/developing-custom-storages/store-traits/transaction","title":"Transaction","description":"While transactions are often considered an essential feature for databases, GlueSQL treats transactions as an optional trait. Custom storage developers can choose whether or not to support transactions in their storage implementation. Transactions can be quite heavy and expensive in terms of performance.","sidebar":"customStorageSidebar"},"storages/developing-custom-storages/using-test-suite":{"id":"storages/developing-custom-storages/using-test-suite","title":"Using the Test Suite","description":"The GlueSQL Test Suite is a valuable tool for validating your custom storage implementation. By using the provided test sets, you can ensure that your storage implementation adheres to the required specifications and works as expected with GlueSQL.","sidebar":"customStorageSidebar"},"storages/intro":{"id":"storages/intro","title":"Introduction","description":"GlueSQL is not only suitable for use as a conventional database, but one of its key features is the ability for anyone to easily adapt SQL and the AST Builder to their desired file or storage system. This adaptability is achieved through the following topics covered in this section:","sidebar":"customStorageSidebar"},"storages/supported-storages/idb-storage":{"id":"storages/supported-storages/idb-storage","title":"IndexedDB Storage","description":"","sidebar":"customStorageSidebar"},"storages/supported-storages/json-storage":{"id":"storages/supported-storages/json-storage","title":"JSON Storage","description":"","sidebar":"customStorageSidebar"},"storages/supported-storages/memory-storage":{"id":"storages/supported-storages/memory-storage","title":"Memory Storage","description":"","sidebar":"customStorageSidebar"},"storages/supported-storages/shared-memory-storage":{"id":"storages/supported-storages/shared-memory-storage","title":"Shared Memory Storage","description":"","sidebar":"customStorageSidebar"},"storages/supported-storages/sled-storage":{"id":"storages/supported-storages/sled-storage","title":"Sled Storage","description":"","sidebar":"customStorageSidebar"},"storages/supported-storages/web-storage":{"id":"storages/supported-storages/web-storage","title":"Web Storage (local & session)","description":"","sidebar":"customStorageSidebar"},"tutorial-basics/congratulations":{"id":"tutorial-basics/congratulations","title":"Congratulations!","description":"You have just learned the basics of Docusaurus and made some changes to the initial template.","sidebar":"tutorialSidebar"},"tutorial-basics/create-a-blog-post":{"id":"tutorial-basics/create-a-blog-post","title":"Create a Blog Post","description":"Docusaurus creates a page for each blog post, but also a blog index page, a tag system, an RSS feed...","sidebar":"tutorialSidebar"},"tutorial-basics/create-a-document":{"id":"tutorial-basics/create-a-document","title":"Create a Document","description":"Documents are groups of pages connected through:","sidebar":"tutorialSidebar"},"tutorial-basics/create-a-page":{"id":"tutorial-basics/create-a-page","title":"Create a Page","description":"Add Markdown or React files to src/pages to create a standalone page:","sidebar":"tutorialSidebar"},"tutorial-basics/deploy-your-site":{"id":"tutorial-basics/deploy-your-site","title":"Deploy your site","description":"Docusaurus is a static-site-generator (also called Jamstack).","sidebar":"tutorialSidebar"},"tutorial-basics/markdown-features":{"id":"tutorial-basics/markdown-features","title":"Markdown Features","description":"Docusaurus supports Markdown and a few additional features.","sidebar":"tutorialSidebar"},"tutorial-extras/manage-docs-versions":{"id":"tutorial-extras/manage-docs-versions","title":"Manage Docs Versions","description":"Docusaurus can manage multiple versions of your docs."},"tutorial-extras/translate-your-site":{"id":"tutorial-extras/translate-your-site","title":"Translate your site","description":"Let\'s translate docs/intro.md to French."}}}')}}]);