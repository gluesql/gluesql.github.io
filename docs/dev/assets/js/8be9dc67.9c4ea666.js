"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5773],{5680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>y});var a=t(6540);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var u=a.createContext({}),p=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(u.Provider,{value:n},e.children)},g="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},s=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,u=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),g=p(t),s=l,y=g["".concat(u,".").concat(s)]||g[s]||m[s]||r;return t?a.createElement(y,i(i({ref:n},d),{},{components:t})):a.createElement(y,i({ref:n},d))}));function y(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,i=new Array(r);i[0]=s;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o[g]="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}s.displayName="MDXCreateElement"},8882:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=t(8168),l=(t(6540),t(5680));const r={sidebar_position:2},i="UPDATE",o={unversionedId:"sql-syntax/statements/data-manipulation/update",id:"sql-syntax/statements/data-manipulation/update",title:"UPDATE",description:"The UPDATE statement is used to modify existing records in a table. You can update one or more columns with new values, or even use subqueries to update values based on other tables.",source:"@site/docs/sql-syntax/statements/data-manipulation/update.md",sourceDirName:"sql-syntax/statements/data-manipulation",slug:"/sql-syntax/statements/data-manipulation/update",permalink:"/docs/dev/sql-syntax/statements/data-manipulation/update",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"autoSidebar",previous:{title:"INSERT",permalink:"/docs/dev/sql-syntax/statements/data-manipulation/insert"},next:{title:"DELETE",permalink:"/docs/dev/sql-syntax/statements/data-manipulation/delete"}},u={},p=[{value:"Basic UPDATE Syntax",id:"basic-update-syntax",level:2},{value:"Examples",id:"examples",level:2},{value:"Updating a Single Column",id:"updating-a-single-column",level:3},{value:"Updating with a Condition",id:"updating-with-a-condition",level:3},{value:"Updating with a Subquery",id:"updating-with-a-subquery",level:3},{value:"Updating Based on the Result of Another Query",id:"updating-based-on-the-result-of-another-query",level:3},{value:"Not Supported Features",id:"not-supported-features",level:2}],d={toc:p},g="wrapper";function m(e){let{components:n,...t}=e;return(0,l.yg)(g,(0,a.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,l.yg)("h1",{id:"update"},"UPDATE"),(0,l.yg)("p",null,"The ",(0,l.yg)("inlineCode",{parentName:"p"},"UPDATE")," statement is used to modify existing records in a table. You can update one or more columns with new values, or even use subqueries to update values based on other tables."),(0,l.yg)("h2",{id:"basic-update-syntax"},"Basic UPDATE Syntax"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sql"},"UPDATE table_name\nSET column1 = value1, column2 = value2, ...\nWHERE condition;\n")),(0,l.yg)("h2",{id:"examples"},"Examples"),(0,l.yg)("h3",{id:"updating-a-single-column"},"Updating a Single Column"),(0,l.yg)("p",null,"Consider the following ",(0,l.yg)("inlineCode",{parentName:"p"},"TableA"),":"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"id"),(0,l.yg)("th",{parentName:"tr",align:null},"num"),(0,l.yg)("th",{parentName:"tr",align:null},"num2"),(0,l.yg)("th",{parentName:"tr",align:null},"name"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"1"),(0,l.yg)("td",{parentName:"tr",align:null},"2"),(0,l.yg)("td",{parentName:"tr",align:null},"4"),(0,l.yg)("td",{parentName:"tr",align:null},"Hello")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"1"),(0,l.yg)("td",{parentName:"tr",align:null},"9"),(0,l.yg)("td",{parentName:"tr",align:null},"5"),(0,l.yg)("td",{parentName:"tr",align:null},"World")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"3"),(0,l.yg)("td",{parentName:"tr",align:null},"4"),(0,l.yg)("td",{parentName:"tr",align:null},"7"),(0,l.yg)("td",{parentName:"tr",align:null},"Great")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"4"),(0,l.yg)("td",{parentName:"tr",align:null},"7"),(0,l.yg)("td",{parentName:"tr",align:null},"10"),(0,l.yg)("td",{parentName:"tr",align:null},"Job")))),(0,l.yg)("p",null,"To update the ",(0,l.yg)("inlineCode",{parentName:"p"},"id")," column for all rows in ",(0,l.yg)("inlineCode",{parentName:"p"},"TableA"),", you can use the following query:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sql"},"UPDATE TableA SET id = 2;\n")),(0,l.yg)("p",null,"The resulting ",(0,l.yg)("inlineCode",{parentName:"p"},"TableA")," would look like this:"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"id"),(0,l.yg)("th",{parentName:"tr",align:null},"num"),(0,l.yg)("th",{parentName:"tr",align:null},"num2"),(0,l.yg)("th",{parentName:"tr",align:null},"name"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"2"),(0,l.yg)("td",{parentName:"tr",align:null},"2"),(0,l.yg)("td",{parentName:"tr",align:null},"4"),(0,l.yg)("td",{parentName:"tr",align:null},"Hello")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"2"),(0,l.yg)("td",{parentName:"tr",align:null},"9"),(0,l.yg)("td",{parentName:"tr",align:null},"5"),(0,l.yg)("td",{parentName:"tr",align:null},"World")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"2"),(0,l.yg)("td",{parentName:"tr",align:null},"4"),(0,l.yg)("td",{parentName:"tr",align:null},"7"),(0,l.yg)("td",{parentName:"tr",align:null},"Great")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"2"),(0,l.yg)("td",{parentName:"tr",align:null},"7"),(0,l.yg)("td",{parentName:"tr",align:null},"10"),(0,l.yg)("td",{parentName:"tr",align:null},"Job")))),(0,l.yg)("h3",{id:"updating-with-a-condition"},"Updating with a Condition"),(0,l.yg)("p",null,"If you want to update only specific rows that meet a certain condition, you can use the ",(0,l.yg)("inlineCode",{parentName:"p"},"WHERE")," clause. For example, to update the ",(0,l.yg)("inlineCode",{parentName:"p"},"id")," column only for the row with ",(0,l.yg)("inlineCode",{parentName:"p"},"num = 9"),":"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sql"},"UPDATE TableA SET id = 4 WHERE num = 9;\n")),(0,l.yg)("h3",{id:"updating-with-a-subquery"},"Updating with a Subquery"),(0,l.yg)("p",null,"You can also use a subquery in the ",(0,l.yg)("inlineCode",{parentName:"p"},"UPDATE")," statement to update a column based on other table's values. For example, to update the ",(0,l.yg)("inlineCode",{parentName:"p"},"num2")," column in ",(0,l.yg)("inlineCode",{parentName:"p"},"TableA")," with the ",(0,l.yg)("inlineCode",{parentName:"p"},"rank")," column value from ",(0,l.yg)("inlineCode",{parentName:"p"},"TableB")," where the ",(0,l.yg)("inlineCode",{parentName:"p"},"num")," column values match, and the ",(0,l.yg)("inlineCode",{parentName:"p"},"num = 7"),":"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sql"},"UPDATE TableA SET num2 = (SELECT rank FROM TableB WHERE num = TableA.num) WHERE num = 7;\n")),(0,l.yg)("h3",{id:"updating-based-on-the-result-of-another-query"},"Updating Based on the Result of Another Query"),(0,l.yg)("p",null,"You can update a column based on the result of another query. For example, to update the ",(0,l.yg)("inlineCode",{parentName:"p"},"num2")," column in ",(0,l.yg)("inlineCode",{parentName:"p"},"TableA")," with the ",(0,l.yg)("inlineCode",{parentName:"p"},"rank")," column value from ",(0,l.yg)("inlineCode",{parentName:"p"},"TableB")," where the ",(0,l.yg)("inlineCode",{parentName:"p"},"num")," column values match, and the ",(0,l.yg)("inlineCode",{parentName:"p"},"num")," is the minimum ",(0,l.yg)("inlineCode",{parentName:"p"},"num")," in ",(0,l.yg)("inlineCode",{parentName:"p"},"TableA"),":"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sql"},"UPDATE TableA SET num2 = (SELECT rank FROM TableB WHERE num = TableA.num) WHERE num = (SELECT MIN(num) FROM TableA);\n")),(0,l.yg)("h2",{id:"not-supported-features"},"Not Supported Features"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Using ",(0,l.yg)("inlineCode",{parentName:"li"},"JOIN")," in an ",(0,l.yg)("inlineCode",{parentName:"li"},"UPDATE")," statement is not supported."),(0,l.yg)("li",{parentName:"ul"},"Updating a table using compound identifiers (e.g., ",(0,l.yg)("inlineCode",{parentName:"li"},"ErrTestTable.id = 1"),") is not supported."),(0,l.yg)("li",{parentName:"ul"},"Updating a non-existent table will result in a ",(0,l.yg)("inlineCode",{parentName:"li"},"TableNotFound")," error."),(0,l.yg)("li",{parentName:"ul"},"Updating a non-existent column will result in a ",(0,l.yg)("inlineCode",{parentName:"li"},"ColumnNotFound")," error.")))}m.isMDXComponent=!0}}]);