"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1827],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>S});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},N=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),N=a,S=p["".concat(i,".").concat(N)]||p[N]||m[N]||o;return n?r.createElement(S,l(l({ref:t},u),{},{components:n})):r.createElement(S,l({ref:t},u))}));function S(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=N;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:a,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}N.displayName="MDXCreateElement"},6775:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={},l="SIGN",s={unversionedId:"sql-syntax/functions/math/sign",id:"sql-syntax/functions/math/sign",title:"SIGN",description:"The SIGN function is used to determine the sign of a number. It takes one argument, which must be of the FLOAT type. The result will be of the INTEGER type and can be -1, 0, or 1.",source:"@site/docs/sql-syntax/functions/math/sign.md",sourceDirName:"sql-syntax/functions/math",slug:"/sql-syntax/functions/math/sign",permalink:"/docs/dev/docs/sql-syntax/functions/math/sign",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sqlSyntaxSidebar",previous:{title:"ROUND",permalink:"/docs/dev/docs/sql-syntax/functions/math/round"},next:{title:"SIN",permalink:"/docs/dev/docs/sql-syntax/functions/math/sin"}},i={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Examples",id:"examples",level:2},{value:"Error Cases",id:"error-cases",level:2}],u={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sign"},"SIGN"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"SIGN")," function is used to determine the sign of a number. It takes one argument, which must be of the FLOAT type. The result will be of the INTEGER type and can be -1, 0, or 1."),(0,a.kt)("h2",{id:"syntax"},"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SIGN(number)\n")),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Using the ",(0,a.kt)("inlineCode",{parentName:"li"},"SIGN")," function with integers:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT SIGN(2) AS SIGN1, \n       SIGN(-2) AS SIGN2, \n       SIGN(+2) AS SIGN3;\n-- Result: 1, -1, 1\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Using the ",(0,a.kt)("inlineCode",{parentName:"li"},"SIGN")," function with floats:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT SIGN(2.0) AS SIGN1, \n       SIGN(-2.0) AS SIGN2, \n       SIGN(+2.0) AS SIGN3;\n-- Result: 1, -1, 1\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Using the ",(0,a.kt)("inlineCode",{parentName:"li"},"SIGN")," function with zero:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT SIGN(0.0) AS SIGN1, \n       SIGN(-0.0) AS SIGN2, \n       SIGN(+0.0) AS SIGN3;\n-- Result: 0, 0, 0\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Using the ",(0,a.kt)("inlineCode",{parentName:"li"},"SIGN")," function with NULL:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT SIGN(NULL) AS sign;\n-- Result: NULL\n")),(0,a.kt)("h2",{id:"error-cases"},"Error Cases"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"SIGN")," function requires the argument to be of FLOAT type:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT SIGN(\'string\') AS SIGN;\n-- Error: FunctionRequiresFloatValue("SIGN")\n\nSELECT SIGN(TRUE) AS sign;\n-- Error: FunctionRequiresFloatValue("SIGN")\n\nSELECT SIGN(FALSE) AS sign;\n-- Error: FunctionRequiresFloatValue("SIGN")\n')),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"SIGN")," function takes exactly one argument:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT SIGN('string', 'string2') AS SIGN;\n-- Error: FunctionArgsLengthNotMatching(\"SIGN\", 1, 2)\n")))}m.isMDXComponent=!0}}]);